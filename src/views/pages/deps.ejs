<div class="row">
  <div class="col">
    <table class="table table-striped table-secondary">
      <thead>
        <tr>
          <th scope="col">#</th>
          <th scope="col">Departamento</th>
          <th scope="col">Zika</th>
          <th scope="col">Dengue</th>
        </tr>
      </thead>
      <tbody>
        <% deps.map((item, key) => { %>
          <tr>
            <th scope="row"><%= key+1 %></th>
              <td>
                <a>
                  <%= item.dep %>
                </a>
              </td>
            <td>
              <span class="badge badge-primary badge-pill">
                <%= item.zikaCases ? item.zikaCases : 'Sin' %> 
                <%= (item.zikaCases ? item.zikaCases : 0) == 1 ? 'Caso' : 'Casos' %>
              </span>
            </td>
            <td>
              <span class="badge badge-warning badge-pill">
                <%= item.dengueCases ? item.dengueCases : 'Sin' %> 
                <%= (item.dengueCases ? item.dengueCases : 0) == 1 ? 'Caso' : 'Casos' %>
              </span>
            </td>
          </tr>
        <% }) %> 
      </tbody>
    </table>
  </div>

  <div class="col-sm-12 col-md-6">
    <!-- Some text here -->
    <div class="">
      <div class="ml-3">
        <h3><span class="badge bg-info text-white">Provincia: <%= prov %></span></h3>
        <h3><span class="badge bg-info text-white">Total Dengue: <%= totalDengueProv %></span></h3>
        <h3><span class="badge bg-info text-white">Total Zika: <%= totalZikaProv %></span></h3>
      </div>
    </div>

    <div class="row">
      <div class="col">
        <div class="row">
          <div class="col chart-container" style="position: relative; height:20vh; width:20vw">
            <div class="text-center">
              <p>
                <h2 class=""><span class="badge bg-warning">Dengue</span></h2>
              </p>
            </div>
            <canvas id="myChart"></canvas>
          </div>
  
          <div class="col chart-container" style="position: relative; height:20vh; width:20vw">
            <div class="text-center">
              <p>
                <h2 class=""><span class="badge bg-primary text-white">Zika</span></h2>
              </p>
            </div>
            <canvas id="zikaChart"></canvas>
          </div>
        </div>
      </div>
    </div>

  </div>
</div>

<script type="text/javascript">
  let prov = JSON.stringify("<%= prov %>").replaceAll('"', "")
  let deps = [];
  let colors = [
  '#1c3321',
  '#f58f0a',
  '#4996c9',
  '#00f539',
  '#0b355e',
  '#5e0b0b',

  '#1c3321',
  '#f58f0a',
  '#4996c9',
  '#00f539',
  '#0b355e',
  '#5e0b0b',

  // Change for add more provs
  '#1c3321',
  '#f58f0a',
  '#4996c9',
  '#00f539',
  '#0b355e',
  '#5e0b0b',

  '#1c3321',
  '#f58f0a',
  '#4996c9',
  '#00f539',
  '#0b355e',
  '#5e0b0b',
]

  axios.get(`http://localhost:3000/api/${prov}/total_deps_dengue_zika`)
    .then(response => {
      console.log(response.data.data)
      deps = response.data.data;
    }).then(() => {
      const data = {
        labels: deps.map(item => item.dengueCases !== 0 ? item.dep : null).filter(item => item !== null),
        datasets: [{
          label: 'My First Dataset',
          data: deps.map(item => item.dengueCases),
          backgroundColor: colors,
          hoverOffset: 4
        }]
      };
      
      var ctx = document.getElementById('myChart').getContext('2d');
      var myChart = new Chart(ctx, {
        type: 'doughnut',
        data: data,
        options: {
          scales: {
            y: {
                beginAtZero: true
            }
          }
        }
      });
    }).then(() => {
      const data = {
        labels: deps.map(item => item.zikaCases !== 0 ? item.dep : null).filter(dep => dep !== null),
        datasets: [{
          label: 'My First Dataset',
          data: deps.map(item => item.zikaCases !== 0 ? item.zikaCases : null).filter(dep => dep !== null),
          backgroundColor: colors,
          hoverOffset: 4
        }]
      };

      var ctx = document.getElementById('zikaChart').getContext('2d');
      var myChart = new Chart(ctx, {
        type: 'doughnut',
        data: data,
        options: {
          scales: {
            y: {
                beginAtZero: true
            }
          }
        }
      });
    })
</script>